{"doc":" The interface Transaction store manager.\n\n @author slievrly\n","fields":[],"enumConstants":[],"methods":[{"name":"writeSession","paramTypes":["io.seata.server.store.TransactionStoreManager.LogOperation","io.seata.server.store.SessionStorable"],"doc":" Write session boolean.\n\n @param logOperation the log operation\n @param session      the session\n @return the boolean\n"},{"name":"readSession","paramTypes":["java.lang.String"],"doc":" Read global session global session.\n\n @param xid the xid\n @return the global session\n"},{"name":"readSession","paramTypes":["java.lang.String","boolean"],"doc":" Read session global session.\n\n @param xid the xid\n @param withBranchSessions the withBranchSessions\n @return the global session\n"},{"name":"readSortByTimeoutBeginSessions","paramTypes":["boolean"],"doc":" Read session global session by sort by timeout begin status.\n\n @param withBranchSessions the withBranchSessions\n @return the global session\n"},{"name":"readSession","paramTypes":["io.seata.core.model.GlobalStatus[]","boolean"],"doc":" Read session global session.\n\n @param statuses the statuses\n @param withBranchSessions the withBranchSessions\n @return the global session list\n"},{"name":"readSession","paramTypes":["io.seata.server.session.SessionCondition"],"doc":" Read session by status list.\n\n @param sessionCondition the session condition\n @return the list\n"},{"name":"shutdown","paramTypes":[],"doc":" Shutdown.\n"}],"constructors":[]}