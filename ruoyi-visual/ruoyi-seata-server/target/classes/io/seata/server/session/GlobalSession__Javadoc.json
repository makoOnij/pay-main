{"doc":" The type Global session.\n\n @author sharajava\n","fields":[{"name":"RETRY_DEAD_THRESHOLD","doc":" If the global session's status is (Rollbacking or Committing) and currentTime - createTime >= RETRY_DEAD_THRESHOLD\n  then the tx will be remand as need to retry rollback\n"}],"enumConstants":[],"methods":[{"name":"add","paramTypes":["io.seata.server.session.BranchSession"],"doc":" Add boolean.\n\n @param branchSession the branch session\n @return the boolean\n"},{"name":"remove","paramTypes":["io.seata.server.session.BranchSession"],"doc":" Remove boolean.\n\n @param branchSession the branch session\n @return the boolean\n"},{"name":"canBeCommittedAsync","paramTypes":[],"doc":" Can be committed async boolean.\n\n @return the boolean\n"},{"name":"hasATBranch","paramTypes":[],"doc":" Has AT branch\n\n @return the boolean\n"},{"name":"isSaga","paramTypes":[],"doc":" Is saga type transaction\n\n @return is saga\n"},{"name":"isTimeout","paramTypes":[],"doc":" Is timeout boolean.\n\n @return the boolean\n"},{"name":"isDeadSession","paramTypes":[],"doc":" prevent could not handle committing and rollbacking transaction\n @return if true retry commit or roll back\n"},{"name":"closeAndClean","paramTypes":[],"doc":" Close and clean.\n\n @throws TransactionException the transaction exception\n"},{"name":"addSessionLifecycleListener","paramTypes":["io.seata.server.session.SessionLifecycleListener"],"doc":" Add session lifecycle listener.\n\n @param sessionLifecycleListener the session lifecycle listener\n"},{"name":"removeSessionLifecycleListener","paramTypes":["io.seata.server.session.SessionLifecycleListener"],"doc":" Remove session lifecycle listener.\n\n @param sessionLifecycleListener the session lifecycle listener\n"},{"name":"getBranch","paramTypes":["long"],"doc":" Gets branch.\n\n @param branchId the branch id\n @return the branch\n"},{"name":"getSortedBranches","paramTypes":[],"doc":" Gets sorted branches.\n\n @return the sorted branches\n"},{"name":"getReverseSortedBranches","paramTypes":[],"doc":" Gets reverse sorted branches.\n\n @return the reverse sorted branches\n"},{"name":"getTransactionId","paramTypes":[],"doc":" Gets transaction id.\n\n @return the transaction id\n"},{"name":"setTransactionId","paramTypes":["long"],"doc":" Sets transaction id.\n\n @param transactionId the transaction id\n"},{"name":"getStatus","paramTypes":[],"doc":" Gets status.\n\n @return the status\n"},{"name":"setStatus","paramTypes":["io.seata.core.model.GlobalStatus"],"doc":" Sets status.\n\n @param status the status\n"},{"name":"getXid","paramTypes":[],"doc":" Gets xid.\n\n @return the xid\n"},{"name":"setXid","paramTypes":["java.lang.String"],"doc":" Sets xid.\n\n @param xid the xid\n"},{"name":"getApplicationId","paramTypes":[],"doc":" Gets application id.\n\n @return the application id\n"},{"name":"getTransactionServiceGroup","paramTypes":[],"doc":" Gets transaction service group.\n\n @return the transaction service group\n"},{"name":"getTransactionName","paramTypes":[],"doc":" Gets transaction name.\n\n @return the transaction name\n"},{"name":"getTimeout","paramTypes":[],"doc":" Gets timeout.\n\n @return the timeout\n"},{"name":"getBeginTime","paramTypes":[],"doc":" Gets begin time.\n\n @return the begin time\n"},{"name":"setBeginTime","paramTypes":["long"],"doc":" Sets begin time.\n\n @param beginTime the begin time\n"},{"name":"getApplicationData","paramTypes":[],"doc":" Gets application data.\n\n @return the application data\n"},{"name":"setApplicationData","paramTypes":["java.lang.String"],"doc":" Sets application data.\n\n @param applicationData the application data\n"},{"name":"createGlobalSession","paramTypes":["java.lang.String","java.lang.String","java.lang.String","int"],"doc":" Create global session global session.\n\n @param applicationId  the application id\n @param txServiceGroup the tx service group\n @param txName         the tx name\n @param timeout        the timeout\n @return the global session\n"},{"name":"setActive","paramTypes":["boolean"],"doc":" Sets active.\n\n @param active the active\n"},{"name":"hasBranch","paramTypes":[],"doc":" Has branch boolean.\n\n @return the boolean\n"}],"constructors":[{"name":"<init>","paramTypes":[],"doc":" Instantiates a new Global session.\n"},{"name":"<init>","paramTypes":["java.lang.String","java.lang.String","java.lang.String","int","boolean"],"doc":" Instantiates a new Global session.\n\n @param applicationId           the application id\n @param transactionServiceGroup the transaction service group\n @param transactionName         the transaction name\n @param timeout                 the timeout\n @param lazyLoadBranch          the lazy load branch\n"},{"name":"<init>","paramTypes":["java.lang.String","java.lang.String","java.lang.String","int"],"doc":" Instantiates a new Global session.\n\n @param applicationId           the application id\n @param transactionServiceGroup the transaction service group\n @param transactionName         the transaction name\n @param timeout                 the timeout\n"}]}