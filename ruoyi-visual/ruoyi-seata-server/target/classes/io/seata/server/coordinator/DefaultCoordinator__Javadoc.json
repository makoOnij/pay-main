{"doc":" The type Default coordinator.\n","fields":[{"name":"COMMITTING_RETRY_PERIOD","doc":" The constant COMMITTING_RETRY_PERIOD.\n"},{"name":"ASYNC_COMMITTING_RETRY_PERIOD","doc":" The constant ASYNC_COMMITTING_RETRY_PERIOD.\n"},{"name":"ROLLBACKING_RETRY_PERIOD","doc":" The constant ROLLBACKING_RETRY_PERIOD.\n"},{"name":"TIMEOUT_RETRY_PERIOD","doc":" The constant TIMEOUT_RETRY_PERIOD.\n"},{"name":"UNDO_LOG_DELETE_PERIOD","doc":" The Transaction undo log delete period.\n"},{"name":"UNDO_LOG_DELAY_DELETE_PERIOD","doc":" The Transaction undo log delay delete period\n"},{"name":"DEFAULT_BRANCH_ASYNC_QUEUE_SIZE","doc":" default branch async queue size\n"},{"name":"BRANCH_ASYNC_POOL_SIZE","doc":" the pool size of branch asynchronous remove thread pool\n"}],"enumConstants":[],"methods":[{"name":"doBranchRemoveAsync","paramTypes":["io.seata.server.session.GlobalSession","io.seata.server.session.BranchSession"],"doc":" Asynchronous remove branch\n\n @param globalSession the globalSession\n @param branchSession the branchSession\n"},{"name":"doBranchRemoveAllAsync","paramTypes":["io.seata.server.session.GlobalSession"],"doc":" Asynchronous remove all branch\n\n @param globalSession the globalSession\n"},{"name":"timeoutCheck","paramTypes":[],"doc":" Timeout check.\n"},{"name":"handleRetryRollbacking","paramTypes":[],"doc":" Handle retry rollbacking.\n"},{"name":"handleRetryCommitting","paramTypes":[],"doc":" Handle retry committing.\n"},{"name":"handleAsyncCommitting","paramTypes":[],"doc":" Handle async committing.\n"},{"name":"undoLogDelete","paramTypes":[],"doc":" Undo log delete.\n"},{"name":"init","paramTypes":[],"doc":" Init.\n"},{"name":"setRemotingServer","paramTypes":["io.seata.core.rpc.RemotingServer"],"doc":" only used for mock test\n @param remotingServer\n"}],"constructors":[{"name":"<init>","paramTypes":["io.seata.core.rpc.RemotingServer"],"doc":" Instantiates a new Default coordinator.\n\n @param remotingServer the remoting server\n"}]}